<?xml version="1.0" encoding="UTF-8"?>
<!-- 
	scan：程序运行时配置文件被修改，是否重新加载。true，重新加载；false,不重新加载；默认为true;
	scanPeriod：监测配置文件被修改的时间间隔，scan属性必须设置为true才可生效；默认为1分钟，默认单位,包括：milliseconds、seconds、minutes和hours;
	debug：是否打印logback程序运行的日志信息。true,打印；false,不打印；默认为false;
	格式：
		%d{HH:mm:ss.SSS}：表示格式化日期输出，14:06:49.812；
		%line:输出执行日志请求的行号。
		%thread：表示产生日志的线程名；
		%level:输出日志级别；
		%method:输出执行日志请求的方法名;
		%class:输出日志打印类的全限定名，后面跟{0}表示，含义为全限定类名最右边点符号之后的字符串。例如：com.jiaboyan.test - test;
		%-4relative含义：符号减号“-”是左对齐 标志，接着是可选的最小宽度 修饰符，用十进制数表示。relative是输出从程序启动到创建日志记录的时间，单位是毫秒;
		%msg：表示应用程序提供需要打印的日志信息；
		%n：表示换行符；
 -->
<configuration 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="http://www.padual.com/java/logback.xsd"
    debug="false" scan="true" scanPeriod="30 seconds">
    
    <!-- 定义常量 -->
    <property name="env" value="dev" />
    <property name="project" value="sbDemo" />
    <property name="root" value="/log" />
    <property name="fileSize" value="50MB" />
    <property name="maxHistory" value="100" />
    <timestamp key="dateTime" datePattern="yyyy-MM-dd HH:mm:ss" />
    <property name="pattern" value="%d{${dateTime}} %-5level %logger{36} -- %msg%n" />
    
    <!-- 控制台打印 -->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder charset="utf-8">
            <pattern>${pattern}</pattern>
        </encoder>
    </appender>
    
    <!-- 输入到文件，按日期和文件大小 -->
    <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <encoder charset="utf-8">
            <pattern>${pattern}</pattern>
        </encoder>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${root}/${project}_${env}_%d.%i.log</fileNamePattern>
            <maxHistory>${maxHistory}</maxHistory>
            <timeBasedFileNamingAndTriggeringPolicy
                class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <maxFileSize>${fileSize}</maxFileSize>
            </timeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
    </appender>
    
    <!-- 指定jar包输出日志级别，additivity: false，不会打印两次 -->
    <Logger name="org.springframework" level="DEBUG" additivity="false">
    	<appender-ref ref="console"/>
    	<appender-ref ref="file"/>
    </Logger>
    <logger name="org.hibernate" level="DEBUG" additivity="false" >
	    <appender-ref ref="console" />
		<appender-ref ref="file" />
	</logger>
    
    <!-- Logger 根目录 
    	level: TRACE<DEBUG<INFO<WARN<ERROR
    	我们在 appender file 的时候，并没有指定日志级别，在此由 root 来控制，输出指定级别及之上级别的日志
    -->
    <root level="DEBUG">
        <appender-ref ref="console" />
        <appender-ref ref="file" />  
    </root>
</configuration>